/*
 * Copyright (C) 2013 CircuitCo
 *
 * Virtual cape for UART4 on connector pins P9.13 P9.11
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;
/plugin/;

#include <dt-bindings/board/am335x-bbw-bbb-base.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/am33xx.h>

/ {
	/*
	 * Helper to show loaded overlays under: /proc/device-tree/chosen/overlays/
	 */
	fragment@0 {
		target-path="/";
		__overlay__ {

			chosen {
				overlays {
					ROBOT-T220-00A0 = __TIMESTAMP__;
				};
			};
		};
	};

	/*
	 * Free up the pins used by the cape from the pinmux helpers.
	 */
	fragment@1 {
		target = <&ocp>;
		__overlay__ {
			P9_13_pinmux { status = "disabled"; };	/* uart4_txd */
			P9_11_pinmux { status = "disabled"; };	/* uart4_rxd */
            P8_33_pinmux { status = "disabled"; };	/* P8_33: mode 6 (uart4_rtsn) */
			P8_35_pinmux { status = "disabled"; };	/* P8_35: mode 6 (uart4_ctsn) */
            P8_37_pinmux { status = "disabled"; };	/* uart5_txd */
			P8_38_pinmux { status = "disabled"; };	/* uart5_rxd */
            P8_32_pinmux { status = "disabled"; };	/* P8_32: mode 6 (uart5_rtsn) */
			P8_31_pinmux { status = "disabled"; };	/* P8_31: mode 6 (uart5_ctsn) */
            P8_07_pinmux { status = "disabled"; };  /* CB_P1_07 ORANGE LED - GPIO2_2 timer4 */
            P8_09_pinmux { status = "disabled"; };  /* CB_P1_09 GREEN LED - GPIO2_5 timer5 */
            P8_13_pinmux { status = "disabled"; };  /* CB_P1_13 RED LED - GPIO0_23 EHRPWM2B*/
            P8_14_pinmux { status = "disabled"; };  /* CB_P1_14 LED HB - GPIO0_26 */
            P8_45_pinmux { status = "disabled"; };  /* CB_P1_45 BUTTON 0 - GPIO2_6 */
            P8_46_pinmux { status = "disabled"; };  /* CB_P1_46 BUTTON 1 - GPIO2_7 */
            P8_43_pinmux { status = "disabled"; };  /* CB_P1_43 BUTTON 2 - GPIO2_8 */
            P8_44_pinmux { status = "disabled"; };  /* CB_P1_44 BUTTON 3 - GPIO2_9 */
            P8_41_pinmux { status = "disabled"; };  /* CB_P1_41 BUTTON 4 - GPIO2_10 */
		};
	};

	fragment@2 {
		target = <&am33xx_pinmux>;
		__overlay__ {
			robot_uart4_pins: pinmux_robot_uart4_pins {
				pinctrl-single,pins = <
					BONE_P9_13 (PIN_OUTPUT | MUX_MODE6)	// gpmc_wpn.uart4_txd_mux2
					BONE_P9_11 (PIN_INPUT  | MUX_MODE6)	// gpmc_wait0.uart4_rxd_mux2
				>;
			};
            robot_u4_rtscts_pins: pinmux_u4_rtscts_pins {
				pinctrl-single,pins = <
					0x0d4 0x0e	/* P8_33: mode 6 (uart4_rtsn) */
					0x0d0 0x36	/* P8_35: mode 6 (uart4_ctsn) */
				>;
			};
            robot_uart5_pins: pinmux_bb_uart5_pins {
				pinctrl-single,pins = <
					BONE_P8_37 (PIN_OUTPUT | MUX_MODE4)	// lcd_data8.uart5_txd
					BONE_P8_38 (PIN_INPUT  | MUX_MODE4)	// lcd_data9.uart5_rxd
				>;
			};
            robot_u5_rtscts_pins: pinmux_u5_rtscts_pins {
				pinctrl-single,pins = <
					0x0dc 0x0e	/* P8_32: mode 6 (uart5_rtsn) */
					0x0d8 0x36	/* P8_31: mode 6 (uart5_ctsn) */
				>;
			};
            robot_led_pins: pinmux_led_pins {
                pinctrl-single,pins = <
                    BONE_P8_07 (PIN_OUTPUT | MUX_MODE7)
                    BONE_P8_09 (PIN_OUTPUT | MUX_MODE7)
                    BONE_P8_13 (PIN_OUTPUT | MUX_MODE7)
                    BONE_P8_14 (PIN_OUTPUT | MUX_MODE7)
                >;
            };
            robot_key_pins: pinmux_key_pins {
                pinctrl-single,pins = <
                    BONE_P8_45 (PIN_INPUT | MUX_MODE7)
                    BONE_P8_46 (PIN_INPUT | MUX_MODE7)
                    BONE_P8_43 (PIN_INPUT | MUX_MODE7)
                    BONE_P8_44 (PIN_INPUT | MUX_MODE7)
                    BONE_P8_41 (PIN_INPUT | MUX_MODE7)
                >;
            };
		};
	};

	fragment@3 {
		target = <&uart4>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&robot_uart4_pins>;
		};
	};

    fragment@4 {
		target = <&uart5>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&robot_uart5_pins>;
		};
	};

    fragment@5 {
		target = <&ocp>; /* On-Chip Peripherals */
		__overlay__ {
            uart4-rtscts-pinmux {
				compatible = "bone-pinmux-helper"; /* Use the pinmux helper */
				status="okay";
				/* Define custom names for indexes in pinctrl array: */
				pinctrl-names = "default";
				/* Set the elements of the pinctrl array to the pinmux overlays
				defined above: */
				pinctrl-0 = <&robot_u4_rtscts_pins>;
			};
			uart5-rtscts-pinmux {
				compatible = "bone-pinmux-helper"; /* Use the pinmux helper */
				status="okay";
				/* Define custom names for indexes in pinctrl array: */
				pinctrl-names = "default";
				/* Set the elements of the pinctrl array to the pinmux overlays
				defined above: */
				pinctrl-0 = <&robot_u5_rtscts_pins>;
			};
		};
	};

 
    fragment@6 {
		target-path = "/";
        __overlay__ {
    
            keys {
                compatible = "gpio-keys";
                pinctrl-names = "default";
                pinctrl-0 = <&robot_key_pins>;
                status = "okay";

                button@0 {
                    debounce_interval = <50>;
                    label = "Button 0";
                    gpios = <&pio2 6 0x0>;
                    linux,code = <59>;
                    gpio-key,wakeup;
                    autorepeat;
                };
/*
                button@1 {
                    debounce_interval = <50>;
                    label = "robot:btn1";
                    gpios = <&pio2 7 GPIO_ACTIVE_LOW>;
                    linux,code = <60>;
                    gpio-key,wakeup;
                    autorepeat;
                };

                button@2 {
                    debounce_interval = <50>;
                    label = "Button 2";
                    gpios = <&pio2 8 GPIO_ACTIVE_LOW>;
                    linux,code = <61>;
                    gpio-key,wakeup;
                };

                button@3 {
                    debounce_interval = <50>;
                    label = "Button 3";
                    gpios = <&pio2 9 GPIO_ACTIVE_LOW>;
                    linux,code = <62>;
                    gpio-key,wakeup;
                };

                ROBOT_KEY_4 {
                    debounce_interval = <50>;
                    gpios = <&pio2 10 GPIO_ACTIVE_HIGH>;
                    label = "robot:btn:4";
                    linux,code = <0x100>;
                    gpio-key,wakeup;
					autorepeat;
                }; */
            };

            leds {
                pinctrl-names = "default";
                pinctrl-0 = <&robot_led_pins>;
                compatible = "gpio-leds";

                ROBOT_RED {
                    label = "robot:red";
                    gpios = <&gpio0 23 GPIO_ACTIVE_HIGH>;
                    default-state = "off";
                };

                ROBOT_GREEN {
                    label = "robot:green";
                    gpios = <&gpio2 5 GPIO_ACTIVE_HIGH>;
                    default-state = "off";
                };

                ROBOT_ORANGE {
                    label = "robot:orange";
                    gpios = <&gpio2 2 GPIO_ACTIVE_HIGH>;
                    default-state = "off";
                };

                ROBOT_HEARTBEAT {
                    label = "robot:heartbeat";
                    gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
                    linux,default-trigger = "heartbeat";
                };
            };
        };
    };
};
