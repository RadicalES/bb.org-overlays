/*
 * Copyright (C) 2013 CircuitCo
 *
 * Virtual cape for UART4 on connector pins P9.13 P9.11
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;
/plugin/;

#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/am33xx.h>
#include <dt-bindings/board/am335x-bbw-bbb-base.h>

/ {
	compatible = "ti,beaglebone", "ti,beaglebone-black", "ti,beaglebone-green";

	  /* identification */
  	part-number = "ROBOT-T420-00A1";
  	version = "00A1";

	  /* state the resources this cape uses */
	exclusive-use =
		/* the pin header uses */
		"P8.45",  /* lcd: lcd_data0 */
		"P8.46",  /* lcd: lcd_data1 */
		"P8.43",  /* lcd: lcd_data2 */
		"P8.44",  /* lcd: lcd_data3 */
		"P8.41",  /* lcd: lcd_data4 */
		"P8.42",  /* lcd: lcd_data5 */
		"P8.39",  /* lcd: lcd_data6 */
		"P8.40",  /* lcd: lcd_data7 */
		"P8.37",  /* lcd: lcd_data8 */
		"P8.38",  /* lcd: lcd_data9 */
		"P8.36",  /* lcd: lcd_data10 */
		"P8.34",  /* lcd: lcd_data11 */
		"P8.35",  /* lcd: lcd_data12 */
		"P8.33",  /* lcd: lcd_data13 */
		"P8.31",  /* lcd: lcd_data14 */
		"P8.32",  /* lcd: lcd_data15 */
		"P8.27",  /* lcd: lcd_vsync */
		"P8.29",  /* lcd: lcd_hsync */
		"P8.28",  /* lcd: lcd_pclk */
		
		"P8.30",  /* lcd: lcd_ac_bias_en */

		"P9.12",  /* led: gpio1_28 LCD_AVDD_EN */

		"P9.31",  /* spi1_clk */
		"P9.29",  /* spi1_d0 */
		"P9.30",  /* spi1_d1 */
		"P9.28",  /* spi1_cs0 */
		"P9.42",  /* spi1_cs1 */

		"P9.16",  /* SERIAL PWR */
		"P9.25",   /* SERIAL OC */

		"P8.9",   /* P1_9, touch done */
		"P8.17",  /* P1_17, touch irq */

		"ehrpwm2b",
		"gpio0_22", /* LCD PWM */
		"gpio1_28", /* LCD AVDD EN */
		"lcdc",
		"spi1";

	/*
	 * Helper to show loaded overlays under: /proc/device-tree/chosen/overlays/
	 */
	fragment@0 {
		target-path="/";
		__overlay__ {
			chosen {
				overlays {
					ROBOT-T420-00A1 = __TIMESTAMP__;
				};
			};
		};
	};

	/*
	 * Free up the pins used by the cape from the pinmux helpers.
	 */
	fragment@1 {
		target = <&ocp>;
		__overlay__ {

			P8_9_pinmux { status = "disabled"; };  /*  TOUCH DONE - GPIO2_5 */
			P8_17_pinmux { status = "disabled"; };  /* TOUCH IRQ - GPIO0_27 */

			P9_31_pinmux { status = "disabled"; };	/* SCK - spi1_sclk */
			P9_29_pinmux { status = "disabled"; };	/* MISO - spi1_d0 */
			P9_30_pinmux { status = "disabled"; };	/* MOSI - spi1_d1 */
			P9_28_pinmux { status = "disabled"; };	/* CS - spi1_cs0 */
		
			P9_12_pinmux { status = "disabled"; };  /* LCD_AVDD_EN - GPIO1_28*/

            P8_13_pinmux { status = "disabled"; };  /* CB_P1_13 LCD ENABLE - GPIO0_23 EHRPWM2B*/
            P8_19_pinmux { status = "disabled"; };  /* CB_P1_19 LCD PWM - GPIO0_22 EHRPWM2A*/
            P8_10_pinmux { status = "disabled"; };  /* CB_P1_10 LED HB - GPIO2_4 */

            P8_45_pinmux { status = "disabled"; };	/* lcd_data0 */
			P8_46_pinmux { status = "disabled"; };	/* lcd_data1 */
			P8_43_pinmux { status = "disabled"; };	/* lcd_data2 */
			P8_44_pinmux { status = "disabled"; };	/* lcd_data3 */
			P8_41_pinmux { status = "disabled"; };	/* lcd_data4 */
			P8_42_pinmux { status = "disabled"; };	/* lcd_data5 */
			P8_39_pinmux { status = "disabled"; };	/* lcd_data6 */
			P8_40_pinmux { status = "disabled"; };	/* lcd_data7 */
			P8_37_pinmux { status = "disabled"; };	/* lcd_data8 */
			P8_38_pinmux { status = "disabled"; };	/* lcd_data9 */
			P8_36_pinmux { status = "disabled"; };	/* lcd_data10 */
			P8_34_pinmux { status = "disabled"; };	/* lcd_data11 */
			P8_35_pinmux { status = "disabled"; };	/* lcd_data12 */
			P8_33_pinmux { status = "disabled"; };	/* lcd_data13 */
			P8_31_pinmux { status = "disabled"; };	/* lcd_data14 */
			P8_32_pinmux { status = "disabled"; };	/* lcd_data15 */
			P8_27_pinmux { status = "disabled"; };	/* lcd_vsync */
			P8_29_pinmux { status = "disabled"; };	/* lcd_hsync */
			P8_28_pinmux { status = "disabled"; };	/* lcd_pclk */
			P8_30_pinmux { status = "disabled"; };	/* lcd_ac_bias_en */

			P9_16_pinmux { status = "disabled"; };  /* SERIAL PWR - GPIO 1-19*/
			P9_25_pinmux { status = "disabled"; };  /* SERIAL OC - GPIO 3-21*/

			/* WIFI M.2 Connector */
			P8_18_pinmux { status = "disabled"; };	/* P8_18: GPIO2_1 mmc2_clk */
			P9_15_pinmux { status = "disabled"; };	/* P9_15: GPIO1_16 mmc2_cmd */
			P8_12_pinmux { status = "disabled"; };	/* P8_12: GPIO1_12 mmc2_dat0 */
			P8_11_pinmux { status = "disabled"; };	/* P8_11: GPIO1_13 mmc2_dat1 */
			P8_16_pinmux { status = "disabled"; };	/* P8_16: GPIO1_14 mmc2_dat2 */
			P8_15_pinmux { status = "disabled"; };	/* P8_15: GPIO1_15 mmc2_dat3 */

			P8_08_pinmux { status = "disabled"; };	/* P8_8: TIMER7/GPIO2_3 WL_EN */
			P9_23_pinmux { status = "disabled"; };	/* P9_23: GPIO1_17 WL_IRQ */
			P9_42_pinmux { status = "disabled"; };	/* P8_26: GPIO0_7 BT_EN */
			P9_27_pinmux { status = "disabled"; };	/* P9_27: GPIO3_19 BT IRQ */

			P9_26_pinmux { status = "disabled"; };	/* P9_26: (D16) uart1_rxd.uart1_rxd */
			P9_24_pinmux { status = "disabled"; };	/* P9_24: (D15) uart1_txd.uart1_txd */
			P9_20_pinmux { status = "disabled"; };	/* P9_20: (D18) uart1_ctsn.uart1_ctsn */
			P9_19_pinmux { status = "disabled"; };	/* P9_19: (D17) uart1_rtsn.uart1_rtsn  */

		};
	};


    fragment@2 {
		target = <&am33xx_pinmux>;
		__overlay__ {

			srl_ctrl_pins: pinmux_srl_ctrl_pins {
				pinctrl-single,pins = <
					BONE_P9_16 (PIN_OUTPUT_PULLDOWN | MUX_MODE0 ) /* SERIAL ENABLE */
					BONE_P9_25 (PIN_INPUT | MUX_MODE0 ) /* SERIAL OVERCURRENT */ 
				>;
			};

			cb_touch_pins: pinmux_cb_touch_pins {
				pinctrl-single,pins = <
					BONE_P8_09 (PIN_INPUT | MUX_MODE7 ) /* TOUCH done */
					BONE_P8_17 (PIN_INPUT | MUX_MODE7 ) /* TOUCH IRQ */ 
				>;
			};

			bb_spi1_pins: pinmux_bb_spi1_pins {
				pinctrl-single,pins = <
					/*AM33XX_IOPAD(0x990, PIN_OUTPUT | MUX_MODE3) /* (A13) mcasp0_aclkx.spi1_sclk */
					/*AM33XX_IOPAD(0x994, PIN_OUTPUT | MUX_MODE3) /* (B13) mcasp0_fsx.spi1_d0 */
					/*AM33XX_IOPAD(0x998, PIN_INPUT | MUX_MODE3) /* (D12) mcasp0_axr0.spi1_d1 */
					/*AM33XX_IOPAD(0x99c, PIN_OUTPUT | MUX_MODE3) /* (C12) mcasp0_ahclkr.spi1_cs0 */
					0x190 0x33	/* mcasp0_aclkx.spi1_sclk, INPUT_PULLUP | MODE3 */
					0x194 0x13	/* mcasp0_fsx.spi1_d0, OUTPUT_PULLUP | MODE3 */
					0x198 0x33	/* mcasp0_axr0.spi1_d1, INPUT_PULLUP | MODE3 */
					0x19c 0x13	/* mcasp0_ahclkr.spi1_cs0, OUTPUT_PULLUP | MODE3 */
					// 0x164 0x12	/* eCAP0_in_PWM0_out.spi1_cs1 OUTPUT_PULLUP | MODE2 */
				>;
			};

            bb_lcd_pwm_backlight_pins: pinmux_bb_lcd_pwm_backlight_pins {
				pinctrl-single,pins = <
					BONE_P8_19 (PIN_OUTPUT_PULLDOWN | MUX_MODE4)	/* EHRPWM2B */
				>;
			};

            bb_lcd_lcd_pins: pinmux_bb_lcd_lcd_pins {
				pinctrl-single,pins = <
					BONE_P8_45 (PIN_OUTPUT | MUX_MODE0)	/* P8_45: lcd_data0.lcd_data0 */
					BONE_P8_46 (PIN_OUTPUT | MUX_MODE0)	/* P8_46: lcd_data1.lcd_data1 */
					BONE_P8_43 (PIN_OUTPUT | MUX_MODE0)	/* P8_43: lcd_data2.lcd_data2 */
					BONE_P8_44 (PIN_OUTPUT | MUX_MODE0)	/* P8_44: lcd_data3.lcd_data3 */
					BONE_P8_41 (PIN_OUTPUT | MUX_MODE0)	/* P8_41: lcd_data4.lcd_data4 */
					BONE_P8_42 (PIN_OUTPUT | MUX_MODE0)	/* P8_42: lcd_data5.lcd_data5 */
					BONE_P8_39 (PIN_OUTPUT | MUX_MODE0)	/* P8_39: lcd_data6.lcd_data6 */
					BONE_P8_40 (PIN_OUTPUT | MUX_MODE0)	/* P8_40: lcd_data7.lcd_data7 */
					BONE_P8_37 (PIN_OUTPUT | MUX_MODE0)	/* P8_37: lcd_data8.lcd_data8 */
					BONE_P8_38 (PIN_OUTPUT | MUX_MODE0)	/* P8_38: lcd_data9.lcd_data9 */
					BONE_P8_36 (PIN_OUTPUT | MUX_MODE0)	/* P8_36: lcd_data10.lcd_data10 */
					BONE_P8_34 (PIN_OUTPUT | MUX_MODE0)	/* P8_34: lcd_data11.lcd_data11 */
					BONE_P8_35 (PIN_OUTPUT | MUX_MODE0)	/* P8_35: lcd_data12.lcd_data12 */
					BONE_P8_33 (PIN_OUTPUT | MUX_MODE0)	/* P8_33: lcd_data13.lcd_data13 */
					BONE_P8_31 (PIN_OUTPUT | MUX_MODE0)	/* P8_31: lcd_data14.lcd_data14 */
					BONE_P8_32 (PIN_OUTPUT | MUX_MODE0)	/* P8_32: lcd_data15.lcd_data15 */

                    BONE_P8_27 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* P8_27: lcd_vsync.lcd_vsync */
					BONE_P8_29 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* P8_29: lcd_hsync.lcd_hsync */
					BONE_P8_28 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* P8_28: lcd_pclk.lcd_pclk */
					
					BONE_P8_30 (PIN_OUTPUT | MUX_MODE7)	/* P8_30: lcd_ac_bias_en.lcd_ac_bias_en */
                    BONE_P8_13 (PIN_OUTPUT | MUX_MODE7)	/* P8_30: lcd_enable.lcd_enable */ 
				/*	BONE_P9_12 (PIN_OUTPUT | MUX_MODE7)	/* P9_12: LCD_AVDD_EN */                    
				>;
			};
		};
	};

	fragment@3 {
		target = <&epwmss2>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@4 {
		target = <&ehrpwm2>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <&bb_lcd_pwm_backlight_pins>;
			status = "okay";
		};
	};

	fragment@5 {
		target = <&lcdc>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@6 {
		target-path = "/";
        __overlay__ {
    
            backlight0 {
				status = "okay";
				compatible = "pwm-backlight";
				pwms = <&ehrpwm2 0 500000 0>;
				brightness-levels = <
					0  1  2  3  4  5  6  7  8  9
					10 11 12 13 14 15 16 17 18 19
					20 21 22 23 24 25 26 27 28 29
					30 31 32 33 34 35 36 37 38 39
					40 41 42 43 44 45 46 47 48 49
					50 51 52 53 54 55 56 57 58 59
					60 61 62 63 64 65 66 67 68 69
					70 71 72 73 74 75 76 77 78 79
					80 81 82 83 84 85 86 87 88 89
					90 91 92 93 94 95 96 97 98 99
					100
				>;
				default-brightness-level = <100>;
			};

			panel: panel {
				status = "okay";
				compatible = "ti,tilcdc,panel";
				pinctrl-names = "default";
				pinctrl-0 = <&bb_lcd_lcd_pins>;
				enable-gpios = <&gpio0 23 0 &gpio2 25 1>;
			
				panel-info {
					ac-bias           = <255>;
					ac-bias-intrpt    = <0>;
					dma-burst-sz      = <16>;
					bpp               = <16>;
					fdd               = <0x80>;
					sync-edge         = <0>; // falling
					sync-ctrl         = <1>;
					raster-order      = <0>; // 1=Most-to-least 0=Least-to-most
					fifo-th           = <0>;
				};

				display-timings {
					native-mode = <&timing0>;
					/* Settings for ThreeFive S9700RTWV35TR / LCD7 cape: */
					timing0: 800x480 {
						clock-frequency = <30000000>;
						hactive = <800>;
						vactive = <480>;
						hfront-porch = <20>;
						hback-porch = <16>;
						hsync-len = <30>;
						vback-porch = <22>;
						vfront-porch = <6>;
						vsync-len = <2>;
						hsync-active = <0>;
						vsync-active = <0>;
						de-active = <1>;
						pixelclk-active = <0>;
					};
				};
			};
		};
	};

	fragment@7 {
		target = <&spi1>;

		__overlay__ {
			status = "okay";
			
			channel@0{ status = "disabled"; };
			channel@1{ status = "disabled"; };
		};
	};

	fragment@8 {
		target = <&spi1>;

		__overlay__ {
			status = "okay";
			#address-cells	= <1>;
			#size-cells	= <0>;

			cs-gpios = <0>, <0>;
			pinctrl-names = "default";
			pinctrl-0 = <&bb_spi1_pins>;
			ti,pio-mode;
			ti,pindir-d0-out-d1-in=<1>;
			
	
			spi1_0@0 {
				#address-cells = <1>;
				#size-cells = <0>;

				pinctrl-0 = <&cb_touch_pins>;
				spi-max-frequency = <1000000>;
				compatible = "ti,tsc2046";
				reg = <0>;
				//spi-cpha;
				
				ti,keep-vref-on = <1>;
				interrupt-parent = <&gpio0>;
				interrupts = <27 IRQ_TYPE_EDGE_FALLING>;
				pendown-gpio = <&gpio2 5 GPIO_ACTIVE_LOW>;

				/*
				 interrupt-parent = <&pioC>;
                                        interrupts = <31 0x0>;
                                        pendown-gpio = <&pioC 31 0>;
				*/

				touchscreen-size-x = <272>;
				touchscreen-size-y = <480>;

				/* driver defaults */
				ti,x-min = /bits/ 16 <230>;
				ti,y-min = /bits/ 16 <230>;
				ti,x-max = /bits/ 16 <3700>;
				ti,y-max = /bits/ 16 <3900>;
				ti,pressure-min = /bits/ 16 <0>;
				ti,pressure-max = /bits/ 16 <500>;
				ti,x-plate-ohms = /bits/ 16 <650>;
				/* ti,swap-xy = <1>; */
				ti,debounce-max = /bits/ 16 <30>;
				ti,debounce-tol = /bits/ 16 <10>;
				ti,debounce-rep = /bits/ 16 <1>;
			};

			spi1_1@1 {
				#address-cells = <1>;
				#size-cells = <0>;

				compatible = "spidev";
				symlink = "spi/1.1";

				reg = <1>;
				spi-max-frequency = <16000000>;
			};
			
		};
	};

	fragment@9 {
		target = <&am33xx_pinmux>;
		__overlay__ {

			bt_pins_default: pinmux_bt_pins {
				pinctrl-single,pins = <
					BONE_P9_42  (PIN_OUTPUT_PULLUP | MUX_MODE0)	/* P8_26: GPIO0_7 BT_EN */
					BONE_P9_27  (PIN_INPUT_PULLUP | MUX_MODE7)	/* P9_27: GPIO3_19 BT IRQ */
				>;
			};

			bt_pins_sleep: pinmux_bt_pins_sleep {
				pinctrl-single,pins = <
					BONE_P9_42  (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* P8_26: GPIO0_7 BT_EN */
					BONE_P9_27  (PIN_INPUT_PULLUP | MUX_MODE7)	/* P9_27: GPIO3_19 BT IRQ*/
				>;
			};
			
			mmc2_pins_default: pinmux_mmc2_pins {
		 		pinctrl-single,pins = <
					BONE_P8_18 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P8_18: GPIO2_1 mmc2_clk */
		 			BONE_P9_15 (PIN_INPUT_PULLUP | MUX_MODE7)	/* P9_15: GPIO1_16 -> 0R */
					BONE_P9_15_2 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P9_15: GPIO2_0 mmc2_cmd */
					BONE_P8_12 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P8_12: GPIO1_12 mmc2_dat0 */
					BONE_P8_11 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P8_11: GPIO1_13 mmc2_dat1 */
					BONE_P8_16 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P8_16: GPIO1_14 mmc2_dat2 */
					BONE_P8_15 (PIN_INPUT_PULLUP | MUX_MODE3)	/* P8_15: GPIO1_15 mmc2_dat3 */
				>;
			};

			mmc2_pins_sleep: pinmux_mmc2_pins_sleep {
				pinctrl-single,pins = <
					BONE_P8_18 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* P8_18: GPIO2_1 mmc2_clk */
					BONE_P9_15 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* P9_15: GPIO1_16 -> 0R */
					BONE_P9_15_2 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* P9_15: GPIO2_0 mmc2_cmd */
					BONE_P8_12 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* P8_12: GPIO1_12 mmc2_dat0 */
					BONE_P8_11 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* P8_11: GPIO1_13 mmc2_dat1 */
					BONE_P8_16 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* P8_16: GPIO1_14 mmc2_dat2 */
					BONE_P8_15 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* P8_15: GPIO1_15 mmc2_dat3 */
				>;
			};


			/* Laird / Marvell sd8897 card enable/irq GPIOs. */
			wlan_pins_default: pinmux_wlan_pins {
				pinctrl-single,pins = <
					BONE_P8_08  (PIN_OUTPUT_PULLDOWN | MUX_MODE7)	/* P8_8: TIMER7/GPIO2_3 WL_EN */
					BONE_P9_23 (PIN_INPUT_PULLUP | MUX_MODE7)	/* P9_23: GPIO1_17 WL_IRQ */
				>;
			};

			/* Laird / Marvell sd8897 card enable/irq GPIOs. */
			wlan_pins_sleep: pinmux_bb_wlan_pins_sleep {
				pinctrl-single,pins = <
					BONE_P8_08  (PIN_OUTPUT_PULLDOWN | MUX_MODE7)	/* P8_8: TIMER7/GPIO2_3 WL_EN */
					BONE_P9_23 (PIN_INPUT_PULLUP | MUX_MODE7)	/* P9_23: GPIO1_17 WL_IRQ */
				>;
			};

			uart1_pins_default: pinmux_bb_uart1_pins_default {
				pinctrl-single,pins = <
					BONE_P9_26 ( PIN_INPUT_PULLUP  | MUX_MODE0 )	/* P9_26: (D16) uart1_rxd.uart1_rxd */
					BONE_P9_24 ( PIN_OUTPUT_PULLDOWN | MUX_MODE0 )	/* P9_24: (D15) uart1_txd.uart1_txd */
					BONE_P9_20 ( PIN_INPUT_PULLUP  | MUX_MODE0 )	/* P9_20: (D18) uart1_ctsn.uart1_ctsn */
					BONE_P9_19 ( PIN_OUTPUT_PULLDOWN | MUX_MODE0 )	/* P9_19: (D17) uart1_rtsn.uart1_rtsn  */
				>;
			};

			uart1_pins_sleep: pinmux_bb_uart1_pins_sleep {
				pinctrl-single,pins = <
					BONE_P9_26 ( PIN_INPUT  | MUX_MODE0 )	/* P9_26: (D16) uart1_rxd.uart1_rxd */
					BONE_P9_24 ( PIN_INPUT | MUX_MODE0 )	/* P9_24: (D15) uart1_txd.uart1_txd */
					BONE_P9_20 ( PIN_INPUT  | MUX_MODE0 )	/* P9_20: (D18) uart1_ctsn.uart1_ctsn */
					BONE_P9_19 ( PIN_INPUT | MUX_MODE0 )	/* P9_19: (D17) uart1_rtsn.uart1_rtsn  */
				>;
			};
			
		};
	};

	fragment@10 {

		target-path = "/";
        __overlay__ {

			wlan_reg: fixedregulator@2 {
				compatible = "regulator-fixed";
				regulator-name = "wlan-regulator";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				startup-delay-us= <70000>;

				/* WL_EN */
				// gpio = <&gpio2 3 0>;
				// enable-active-high;
			};

		};
	};

	fragment@11 {
		target = <&mmc3>;
		//@47810000
		__overlay__ {
			dmas = <&edma_xbar 12 0 1
						&edma_xbar 13 0 2>;
			dma-names = "tx", "rx";
			status = "okay";
			bus-width = <4>;
			vmmc-supply = <&wlan_reg>;
			pinctrl-names = "default", "sleep";
			pinctrl-0 = <&mmc2_pins_default &wlan_pins_default>;
			pinctrl-1 = <&mmc2_pins_sleep &wlan_pins_sleep>;
			ti,non-removable;
			ti,needs-special-hs-handling;
			ti,dual-volt;
			cap-power-off-card;
			keep-power-in-suspend;
			max-frequency = <25000000>;
			broken-cd;
			
			#address-cells = <1>;
			#size-cells = <0>;
			wlcore: wlcore@1 {
				compatible = "marvell,sd8997";
				reg = <1>;
				interrupt-parent = <&gpio1>;
				interrupts = <17 IRQ_TYPE_LEVEL_LOW>;
				pmu-en-gpios = <&gpio2 3 0>;
			};
		};
	};

	fragment@12 {
		target = <&uart1>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <&uart1_pins_default &bt_pins_default>;
			status = "okay";

			// bluetooth {
			// 	compatible = "mrvl,88w8897";
			// 	enable-gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
			// 	interrupt-parent = <&gpio3>;
			// 	interrupts = <19 IRQ_TYPE_LEVEL_LOW>;
			// };
		};
	};

	fragment@13 {
		target-path = "/";
		__overlay__ {
			gpio-leds {
				compatible = "gpio-leds";
				pinctrl-names = "default";
				pinctrl-0 = <&srl_ctrl_pins>;

				led-srl-pwr {
					label = "rbt420::serialpwr";
					gpios = <&gpio1 19 GPIO_ACTIVE_HIGH>;
					default-state = "on";
				};
			};
		};
	};

};
